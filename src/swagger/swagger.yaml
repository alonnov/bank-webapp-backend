openapi: 3.0.0
info:
  title: Alon's Banking App
  version: 1.0.0
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserInfo:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
          maxLength: 32
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^a-zA-Z\\d]).+$"
        first_name:
          type: string
          minLength: 1
          maxLength: 50
        last_name:
          type: string
          minLength: 1
          maxLength: 50
        phone:
          type: string
          pattern: "^\\+?\\d+$"
        birthday:
          type: string
          pattern: "^\\d{2}\\.\\d{2}\\.\\d{4}$"
      required:
        - email
        - password
        - first_name
        - last_name
        - phone
        - birthday
    UserInfoUpdate:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 50
        last_name:
          type: string
          minLength: 1
          maxLength: 50
        phone:
          type: string
          pattern: "^\\+?\\d+$"
        birthday:
          type: string
          pattern: "^\\d{2}\\.\\d{2}\\.\\d{4}$"
      required:
        - first_name
        - last_name
        - phone
        - birthday
    EmailChange:
      type: object
      properties:
        currentPassword:
          type: string
        newEmail:
          type: string
          format: email
      required:
        - currentPassword
        - newEmail
    PasswordChange:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        confirmPassword:
          type: string
      required:
        - currentPassword
        - newPassword
        - confirmPassword
    Transaction:
      type: object
      properties:
        recipient:
          type: string
          format: email
        sum:
          type: number
          minimum: 1
        message:
          type: string
      required:
        - recipient
        - sum
    EmailRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
        - email
    EmailVerifyRequest:
      allOf:
        - $ref: '#/components/schemas/EmailRequest'
        - type: object
          properties:
            code:
              type: string
              minLength: 6
              maxLength: 6
          required:
            - code
paths:
  /signup:
    post:
      tags:
        - Public
      security: []  # public
      description: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        "201":
          description: Signup successful
        "400":
          description: Invalid data or email already exists
        "500":
          description: Internal server error

  /login:
    post:
      tags:
        - Public
      security: []  # public
      description: Login user and return JWT + account info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
        "401":
          description: Invalid credentials
        "403":
          description: Email not verified
        "500":
          description: Internal server error

  /logout:
    post:
      tags:
        - Public
      description: Logout user
      responses:
        "200":
          description: Logout successful
        "401":
          description: Unauthorized

  /public/verify/send:
    post:
      tags:
        - Public
      security: []
      description: Send email verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      responses:
        "200":
          description: Verification email sent
        "400":
          description: Invalid email or user not found
        "429":
          description: Too many requests
        "500":
          description: Internal server error

  /public/verify:
    post:
      tags:
        - Public
      security: []
      description: Verify email with code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerifyRequest'
      responses:
        "200":
          description: Email verified successfully
        "400":
          description: Invalid or expired code
        "404":
          description: User not found
        "500":
          description: Internal server error

  /verify/status:
    get:
      tags:
        - Public
      description: Check email verification status
      responses:
        "200":
          description: Verification status
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                required:
                  - email
        "401":
          description: Unauthorized

  /account/info:
    get:
      tags:
        - Auth
      description: Get user info
      responses:
        "200":
          description: User info retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        "401":
          description: Unauthorized
    put:
      tags:
        - Auth
      description: Update user info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoUpdate'
      responses:
        "200":
          description: Info updated successfully
        "400":
          description: Invalid data
        "401":
          description: Unauthorized

  /account/security/change-email:
    post:
      tags:
        - Auth
      description: Change user email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailChange'
      responses:
        "200":
          description: Email changed successfully
        "400":
          description: Invalid data or password mismatch
        "401":
          description: Unauthorized

  /account/security/change-password:
    post:
      tags:
        - Auth
      description: Change user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        "200":
          description: Password changed successfully
        "400":
          description: Invalid data or password mismatch
        "401":
          description: Unauthorized

  /account/transactions:
    post:
      tags:
        - Auth
      description: Create a transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        "201":
          description: Transaction created
        "400":
          description: Invalid transaction
        "401":
          description: Unauthorized
    get:
      tags:
        - Auth
      description: Transaction history
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: History retrieved
        "401":
          description: Unauthorized

  /account/transactions/{id}:
    get:
      tags:
        - Auth
      description: Get transaction by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Transaction retrieved
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
